アプリケーションの名前：過去メモ
コンセプト：過去、自分が考えたアイデアを思い出すきっかけをつくり、そのアイデアをさらに深める
サービス説明、概要：過去のメモを思い出すきっかけを作るため、メモ帳の上部に過去のメモをランダム表示する。また、そのメモに対して現在の考えをメモできる
制作目的：一度メモしたアイデアは忘れてしまい、振り返る機会がなかなかなかった。しかし、過去のアイデアを時間をおいてからもう一度振り返ることで、良いアイデアが浮かぶことがある。過去のメモを振り返りやすいメモ帳を使えば、その問題が解決され、良いアイデアを生み出す手助けができると考えた。

想定されたユーザー(ターゲット)：アイデアを生み出したい人。過去のメモに書いたアイデアを忘れてしまう人。
ユーザーが持つ課題：過去のメモに書いたアイデアが使われないまま忘れ去られてしまう。
？課題の解決方法：メモ帳の上部に過去のメモをランダム表示する。また、そのメモに対して現在の考えをメモできる
使用技術：Laravel8、vue3、MYSQL
選定理由：使い慣れていたため。
今後追加したい機能など：

制作過程＋制作意図：
制作上の課題、解決策：
こだわり(工夫、挑戦)：

＜？になった＞
・"export 'createRouter' was not found in 'vue-router' エラーが出てくる。
npm install -D vue-routerでルーターを入れたが、npm install -D vue-router@nextにしないといけなかった。そのまま上書きしがエラーがでる。npm remove vue-routerで消して、もう一度npm install -D vue-router@nextするも、ERROR in ./node_modules/vue-router/dist/vue-router.esm.jsエラー。npm run watchを止めて、もう一度npm run watchをすると、なおっている
→vueが2になってたから消して3を入れなおしたらrouterがないエラー

・npm install vuex@nextを一度消してnpm remove vuex、npm install -D vuex@next
→vuexについてhttps://reffect.co.jp/vue/understaind-vue-basic

・UTCの日付形式（例：2021-07-21T04:37:47.000000Z）になってしまいます。
→Vueのday.jsでformatを変えるか、laravelで変えるか？
→vueのday.jsで
<small class="card-text">{{ makeDate(memo.updated_at) }}</small>
<script>
    methods:{
      makeDate(date){
        return dayjs(date).format('YYYY/MM/DD HH:mm:ss')
      }
    },
</script>

・ランダムな数字をセットするのをstoreのactionsにするか、mutationsにするか悩んだが、最初の読み込み時のみactionから呼び出せばいいので、mutationsに。

・veuからLaravelへデータを追加
    ・MemoForm.vue
    import axios from 'axios'
    import {baseurl} from '../const'
    export default {
        //今回は例なのでmounted
        mounted() {
            const url = baseurl + 'api/memos'
            axios.post(url,{
                title:'テスト',
                content:'内容',
            }).then((response) => {
                // axiosが成功したときのHTTPレスポンスを表示
                console.log(response)
            }).catch((error) => {
                // axiosが失敗したときのエラーを表示
                console.log(error)
            })
        },
    }

    ・const.js
    export const baseurl = 'http://127.0.0.1:8000/'
    export default baseurl

    ・$ php artisan route:listで調べると、
    | POST      | api/memos           | memos.store
    なので、
    ・MemoController.phpのstoreを編集。※バリデーションを追加
    public function store(Request $request)
    {
        $memo = new Memo();
        $memo->fill($request->all())->save();
    }



＜参考＞
・jsonからとってきてデータ一覧を表示
https://blog.capilano-fw.com/?p=432#Vue
・vuexのstoreでconsole.logを書く場所
https://dev83.com/vue-vuex04/

セキュリティ：
(1) 機密性の高いデータを保存しない (必要なければ)。 
(2) ユーザーに与えるアクセス権 はできるだけ小さくする。 
(3) サードパーティライブラリの利用をでき あるあるだけ避ける (コードが少ないほど､ 脆弱性も少ない)。
(4) 利用されなくなった機能を削除する (コードを減らし、 脆弱性を減らす)。

機能設計
    ＜全体＞
    ・スマホ対応、横向き縦向き対応

    ＜ユーザーができること＞
    ・メモを作成、編集、削除、一覧表示できる。

    ・過去メモ表示を非表示

    ・ユーザーごとにアカウントを持ち、ログインしたユーザーは自分のメモだけを閲覧または編集することができる。

    ・ユーザーはパスワードを忘れた場合には再登録することができる。

    ＜メモ＞
    ・タイトル、メモの中身、更新日、作成日、過去メモとして表示するか否か設定を持つ。

    ・メモを保存せず終了、戻るボタンを押したら、注意メッセージ

    ・設定ボタン：過去メモとして表示するか否か設定ボタン。削除ボタン。

    ・入力値バリデーション：タイトルはNotNull、required。デフォルト名「無題のメモ」。VARCHAR(20)、max:20

    ・過去のメモ：上部にランダム表示。再読み込みボタンを押せばもう一度ランダム表示。メモをタップすればメモ編集画面に遷都。


画面設計
    ・オン/オフボタン：トグルスイッチ。オンオフを文字で表示
    ・よく使う機能は格納しない：「メモ新規作成」など

開発
    php artisan serve
    npm run watch

        ・メモを作成、編集、削除
        ・ユーザー認証
        ・検索機能
        ・過去メモ表示・非表示
        ・上部メニューにアイコン追加、いい感じに見えるように整理


    モデルとマイグレーションを同時に作成
    php artisan make:model 名(最初大文字。単数形) --migration

    DBにテーブル作成
    php artisan migrate

    ダミーデータを作る
    php artisan make:seeder ダミーデータ名(UsersTableSeeder)

    DatabaseSeeder.phpに今書いたファイル名を登録

    シードを実行
    php artisan db:seed

    ※シードが重複登録されてしまったとき
    php artisan migrate:fresh --seed

    コントローラーを作る
    php artisan make:controller コントローラー名(UserController) --api

    routes/web.phpにルート情報を追加

    バリデーションのためにフォームリクエストクラスを作成
    $ php artisan make:request リクエスト名(CreateMemoRequest)

    pages/にページ追加→router.jsを編集。※import忘れずに

テスト
    テストライブラリを使う

    インメモリを使う？

    Registerすべて消す？使ってないファイル消す方法探す？


